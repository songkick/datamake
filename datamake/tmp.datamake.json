[
  {
    "id": "download",
    "command": "mkdir -pv /tmp/analytics-events/${events_type}/${date}/ && $S3CMD get --force s3://songkick-cloudfront-logs/${cloudfront_basedir}/${cloudfront_id}.${date}-* /tmp/analytics-events/${events_type}/${date}/ && find /tmp/analytics-events/${events_type}/${date}/ -name ${cloudfront_id}.${date}-*.gz -exec gzip -c -d {} \\; > /tmp/analytics-events/${events_type}-events-${date}.log && rm -rvf /tmp/analytics-events/${events_type}/${date}/",
    "cleanup": true,
    "artifact": "/tmp/analytics-events/${events_type}-events-${date}.log"
  },
  {
    "id": "generate",
    "command": "mkdir -pv /tmp/analytics-events/ && python $ETL_HOME/data_sets/workspace/analytics_events/src/analytics_events.py /tmp/analytics-events/${events_type}-events-${date}.log /tmp/analytics-events/${events_type}-events-${date}.json",
    "artifact": "/tmp/analytics-events/${events_type}-events-${date}.json",
    "cleanup": true,
    "dependencies": [ "download" ],
    "max_attempts": 5
  },
  {
    "id": "sort",
    "command": "cat /tmp/analytics-events/${events_type}-events-${date}.json | jq -c '[.date,.uid,.time,.]' | sort | jq -c '.[3]' > /tmp/analytics-events/${events_type}-events-${date}.sorted.json",
    "artifact": "/tmp/analytics-events/${events_type}-events-${date}.sorted.json",
    "dependencies": [ "generate" ]
  },
  {
    "id": "sort2",
    "command": "cat /tmp/analytics-events/${events_type}-events-${date}.json | jq -c '[.date,.uid,.time,.]' | sort | jq -c '.[3]' > /tmp/analytics-events/${events_type}-events-${date}.sorted.json",
    "artifact": "/tmp/analytics-events/${events_type}-events-${date}.sorted.json",
    "dependencies": [ "generate" ]
  },
  {
    "id": "compress",
    "command": "gzip /tmp/analytics-events/${events_type}-events-${date}.sorted.json",
    "artifact": "/tmp/analytics-events/${events_type}-events-${date}.sorted.json.gz",
    "cleanup": true,
    "dependencies": [ "sort", "sort2" ]
  },
  {
    "id": "deploy",
    "command": "$S3CMD put /tmp/analytics-events/${events_type}-events-${date}.sorted.json.gz s3://songkick/workspace/analytics_events/${events_type}/${date}/${events_type}-events-${date}.sorted.json.gz",
    "artifact": "s3://songkick/workspace/analytics_events/${events_type}/${date}/${events_type}-events-${date}.sorted.json.gz",
    "dependencies": [ "compress" ]
  },
  {
    "id": "deploy-detour",
    "dependencies": [ "deploy"],
    "parameters": {
      "events_type": "detour",
      "cloudfront_basedir": "snowplow-detour-logs",
      "cloudfront_id": "E1WYD2QE1M0HB4",
      "ETL_HOME": "/var/lib/songkick/production/science_etl/current",
      "date": "=(date_days_delta(date_now(), -i) for i in range(1,8))",
      "S3CMD": "s3cmd --config=$ETL_HOME/config/data_science.s3cfg"
    }
  },
  {
    "id": "deploy-skweb",
    "dependencies": [ "deploy" ],
    "parameters": {
      "date": "=(date_days_delta(date_now(), -i) for i in range(1,8))",
      "S3CMD": "s3cmd --config=$ETL_HOME/config/data_science.s3cfg",
      "events_type": "skweb",
      "cloudfront_basedir": "snowplow-logs",
      "cloudfront_id": "E1M7VSV08B18JA",
      "ETL_HOME": "/var/lib/songkick/production/science_etl/current"
    }
  },
  {
    "id": "deploy-tickets",
      "dependencies": [ "deploy" ],
    "parameters": {
      "date": "=(date_days_delta(date_now(), -i) for i in range(1,3))",
      "S3CMD": "s3cmd --config=$ETL_HOME/config/data_science.s3cfg",
      "events_type": "tickets",
      "cloudfront_basedir": "snowplow-tickets-logs",
      "cloudfront_id": "EI8U3VYI9HPKA",
      "ETL_HOME": "/var/lib/songkick/production/science_etl/current"
    }
  },
  {
    "id": "deploy-science",
      "dependencies": [ "deploy" ],
    "parameters": {
      "date": "=(date_days_delta(date_now(), -i) for i in range(1,3))",
      "S3CMD": "s3cmd --config=$ETL_HOME/config/data_science.s3cfg",
      "events_type": "science",
      "cloudfront_basedir": "snowplow-science-logs",
      "cloudfront_id": "E1ZTNS6P7FXD6",
      "ETL_HOME": "/var/lib/songkick/production/science_etl/current"
    }
  }
]

